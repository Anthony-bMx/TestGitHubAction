# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "export_job"
  export_job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Interrogate API and download .JSON file
      - name: Download backup file action step
        run: |
          # Prepare destination directory
          mkdir -p backups
          
          # Get formated date
          date=$(date +"%Y-%m-%dT%H-%M-%SZ")
          
          # Prepare filename (Example:  "Notify-Backup-2020-12-07T14-19-16Z.json")
          filename="Notify-Backup-${date}.json"
          
          # Interogate API to get configuration file
          wget -S "https://jsonplaceholder.typicode.com/todos/1" -O backups/$filename
      # Interrogate API and download .JSON file
#      - name: Download backup file action step
#        uses: ./ # Uses an action in the root directory
#        id: exportStep
#        env:
#          BPMRULESREPOSITORYRULES_USERNAME: ${{ secrets.BPMRULESREPOSITORYRULES_USERNAME }}
#          BPMRULESREPOSITORYRULES_PASSWORD: ${{ secrets.BPMRULESREPOSITORYRULES_PASSWORD }}          
#        with:
#          subaccount: 'dev'
#          projectId: 'devProject'
#          username:  ${{ secrets.BPMRULESREPOSITORYRULES_USERNAME }}
#          password:  ${{ secrets.BPMRULESREPOSITORYRULES_PASSWORD }}
      - name: Commit report
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email ''
          git add -A backups
          git commit -m "Automated commit"        
          git push
      
      # Use the output from the `exportStep` step
      - name: Get the output time
        run: echo "The time was ${{ steps.exportStep.outputs.time }}"
